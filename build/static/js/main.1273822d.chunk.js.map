{"version":3,"sources":["Settings.js","utils/hooks/useApi.js","Top.js","App.js","serviceWorker.js","index.js"],"names":["Option","Select","formItemLayout","labelCol","span","wrapperCol","StyledForm","styled","Form","Text","Settings","history","useHistory","onClickBackButton","useCallback","push","type","htmlType","onClick","name","onFinish","value","console","log","initialValues","Item","label","hasFeedback","rules","required","message","placeholder","mode","noStyle","min","max","className","valuePropName","marks","0","20","40","60","80","100","Group","Button","style","lineHeight","disabled","offset","useGetApi","endpoint","useState","data","setData","axios","get","then","d","Row","div","Preview","PreviewImg","img","Position","pre","StyledAutoScroll","AutoScroll","Log","Top","readLogFn","position","readPositionFn","inputImg","readInputImgFn","outputImg","readOutputImgFn","depthImg","readDepthImgFn","onClickSettingsButton","intervalFn","useEffect","useInterval","src","height","Container","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.1273822d.chunk.js","sourcesContent":["import {\n  Button,\n  Checkbox,\n  Col,\n  Form,\n  InputNumber,\n  Radio,\n  Rate,\n  Row,\n  Select,\n  Slider,\n  Switch,\n} from \"antd\";\nimport React, { useCallback } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst { Option } = Select;\n\nconst formItemLayout = {\n  labelCol: { span: 10 },\n  wrapperCol: { span: 14 },\n};\n\nconst StyledForm = styled(Form)`\n  margin: 40px;\n`;\n\nconst Text = styled.span`\n  color: white;\n`;\n\nconst Settings = () => {\n  const history = useHistory();\n  const onClickBackButton = useCallback(() => history.push(\"/\"), []);\n  const onFinish = (value) => {\n    console.log(value);\n  };\n  return (\n    <>\n      <Button type=\"primary\" htmlType=\"submit\" onClick={onClickBackButton}>\n        戻る\n      </Button>\n      <StyledForm\n        name=\"validate_other\"\n        {...formItemLayout}\n        onFinish={onFinish}\n        initialValues={{\n          [\"input-number\"]: 3,\n          [\"checkbox-group\"]: [\"A\", \"B\"],\n          rate: 3.5,\n        }}\n      >\n        <Form.Item\n          name=\"select\"\n          label={<Text>Select</Text>}\n          hasFeedback\n          rules={[{ required: true, message: \"Please select your country!\" }]}\n        >\n          <Select placeholder=\"Please select a country\">\n            <Option value=\"china\">China</Option>\n            <Option value=\"usa\">U.S.A</Option>\n          </Select>\n        </Form.Item>\n\n        <Form.Item\n          name=\"select-multiple\"\n          label={<Text>Select[multiple]</Text>}\n          rules={[\n            { required: true, message: \"Please select your favourite colors!\", type: \"array\" },\n          ]}\n        >\n          <Select mode=\"multiple\" placeholder=\"Please select favourite colors\">\n            <Option value=\"red\">Red</Option>\n            <Option value=\"green\">Green</Option>\n            <Option value=\"blue\">Blue</Option>\n          </Select>\n        </Form.Item>\n\n        <Form.Item label={<Text>InputNumber</Text>}>\n          <Form.Item name=\"input-number\" noStyle>\n            <InputNumber min={1} max={10} />\n          </Form.Item>\n          <span className=\"ant-form-text\">\n            {\" \"}\n            <Text>machines</Text>\n          </span>\n        </Form.Item>\n\n        <Form.Item name=\"switch\" label={<Text>Switch</Text>} valuePropName=\"checked\">\n          <Switch />\n        </Form.Item>\n\n        <Form.Item name=\"slider\" label={<Text>Slider</Text>}>\n          <Slider\n            marks={{\n              0: <Text>A</Text>,\n              20: <Text>B</Text>,\n              40: <Text>C</Text>,\n              60: <Text>D</Text>,\n              80: <Text>E</Text>,\n              100: <Text>F</Text>,\n            }}\n          />\n        </Form.Item>\n\n        <Form.Item name=\"radio-group\" label={<Text>Radio.Group</Text>}>\n          <Radio.Group>\n            <Radio value=\"a\">\n              <Text>item 1</Text>\n            </Radio>\n            <Radio value=\"b\">\n              <Text>item 2</Text>\n            </Radio>\n            <Radio value=\"c\">\n              <Text>item 3</Text>\n            </Radio>\n          </Radio.Group>\n        </Form.Item>\n\n        <Form.Item name=\"radio-button\" label={<Text>Radio.Button</Text>}>\n          <Radio.Group>\n            <Radio.Button value=\"a\">item 1</Radio.Button>\n            <Radio.Button value=\"b\">item 2</Radio.Button>\n            <Radio.Button value=\"c\">item 3</Radio.Button>\n          </Radio.Group>\n        </Form.Item>\n\n        <Form.Item name=\"checkbox-group\" label={<Text>Checkbox.Group</Text>}>\n          <Checkbox.Group>\n            <Row>\n              <Col span={8}>\n                <Checkbox value=\"A\" style={{ lineHeight: \"32px\" }}>\n                  A\n                </Checkbox>\n              </Col>\n              <Col span={8}>\n                <Checkbox value=\"B\" style={{ lineHeight: \"32px\" }} disabled>\n                  B\n                </Checkbox>\n              </Col>\n              <Col span={8}>\n                <Checkbox value=\"C\" style={{ lineHeight: \"32px\" }}>\n                  C\n                </Checkbox>\n              </Col>\n              <Col span={8}>\n                <Checkbox value=\"D\" style={{ lineHeight: \"32px\" }}>\n                  D\n                </Checkbox>\n              </Col>\n              <Col span={8}>\n                <Checkbox value=\"E\" style={{ lineHeight: \"32px\" }}>\n                  E\n                </Checkbox>\n              </Col>\n              <Col span={8}>\n                <Checkbox value=\"F\" style={{ lineHeight: \"32px\" }}>\n                  F\n                </Checkbox>\n              </Col>\n            </Row>\n          </Checkbox.Group>\n        </Form.Item>\n\n        <Form.Item name=\"rate\" label={<Text>Rate</Text>}>\n          <Rate />\n        </Form.Item>\n\n        <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            適応\n          </Button>\n        </Form.Item>\n      </StyledForm>\n    </>\n  );\n};\n\nexport default Settings;\n","import axios from \"axios\";\nimport { useState } from \"react\";\n\nconst HOST = \"http://localhost:8000\";\n\nexport function useGetApi(endpoint) {\n  const [data, setData] = useState(\"\");\n  const loadFn = () => axios.get(`${HOST}${endpoint}`).then((d) => setData(d.data));\n\n  return [data, loadFn];\n}\n","import AutoScroll from \"@brianmcallister/react-auto-scroll\";\nimport { Button } from \"antd\";\nimport React, { useCallback, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport useInterval from \"use-interval\";\nimport { useGetApi } from \"./utils/hooks/useApi\";\n\nconst Row = styled.div`\n  display: flex;\n`;\n\nconst Preview = styled.div`\n  margin: 20px;\n`;\nconst PreviewImg = styled.img`\n  width: 400px;\n`;\n\nconst Position = styled.pre`\n  margin: 20px;\n  font-size: 14px;\n  background-color: #0e121a;\n  text-align: left;\n  padding: 32px;\n`;\n\nconst StyledAutoScroll = styled(AutoScroll)`\n  margin: 20px;\n`;\n\nconst Log = styled.pre`\n  margin: 0px;\n  font-size: 12px;\n  background-color: #0e121a;\n  text-align: left;\n  padding: 32px;\n`;\n\nconst Top = () => {\n  const [log, readLogFn] = useGetApi(\"/read-log\");\n  const [position, readPositionFn] = useGetApi(\"/read-result\");\n  const [inputImg, readInputImgFn] = useGetApi(\"/read-input-img\");\n  const [outputImg, readOutputImgFn] = useGetApi(\"/read-output-img\");\n  const [depthImg, readDepthImgFn] = useGetApi(\"/read-depth-img\");\n  const history = useHistory();\n  const onClickSettingsButton = useCallback(() => history.push(\"/settings\"), []);\n\n  const intervalFn = () => {\n    readLogFn();\n    readPositionFn();\n    readInputImgFn();\n    readOutputImgFn();\n    readDepthImgFn();\n  };\n\n  useEffect(intervalFn, []);\n  useInterval(intervalFn, 3000);\n  return (\n    <>\n      <Button type=\"primary\" onClick={onClickSettingsButton} disabled={true}>\n        設定\n      </Button>\n      <Row>\n        <Preview>\n          <p>入力画像</p>\n          <PreviewImg src={`data:image/jpeg;base64,${inputImg}`} />\n        </Preview>\n        <Preview>\n          <p>処理結果</p>\n          <PreviewImg src={`data:image/jpeg;base64,${outputImg}`} />\n        </Preview>\n        <Preview>\n          <p>深度</p>\n          <PreviewImg src={`data:image/jpeg;base64,${depthImg}`} />\n        </Preview>\n      </Row>\n      <Row>\n        <div>\n          <p>座標</p>\n          <Position>{position}</Position>\n        </div>\n        <div>\n          <p>ログ</p>\n          <StyledAutoScroll height=\"720px\">\n            <Log>{log}</Log>\n          </StyledAutoScroll>\n        </div>\n      </Row>\n    </>\n  );\n};\n\nexport default Top;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Settings from \"./Settings\";\nimport Top from \"./Top\";\n\nconst Container = styled.div`\n  padding: 48px;\n\n  text-align: center;\n\n  background-color: #282c34;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n`;\n\nfunction App() {\n  return (\n    <Container>\n      <Router>\n        <div>\n          <Route exact path=\"/\" component={Top} />\n          <Route path=\"/settings\" component={Settings} />\n        </div>\n      </Router>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import \"antd/dist/antd.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}